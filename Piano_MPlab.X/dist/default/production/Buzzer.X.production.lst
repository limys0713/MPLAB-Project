

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 09 23:27:13 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 18/08/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   000DAA                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _tone_list_L
    74   000DAA  4D                 	db	77
    75   000DAB  DA                 	db	218
    76   000DAC  30                 	db	48
    77   000DAD  F7                 	db	247
    78   000DAE  E1                 	db	225
    79   000DAF  E9                 	db	233
    80   000DB0  77                 	db	119
    81   000DB1  A7                 	db	167
    82   000DB2  ED                 	db	237
    83   000DB3  98                 	db	152
    84   000DB4  FC                 	db	252
    85   000DB5  70                 	db	112
    86   000DB6  F4                 	db	244
    87   000DB7  BC                 	db	188
    88   000DB8  53                 	db	83
    89   000DB9  F6                 	db	246
    90   000DBA  CC                 	db	204
    91   000DBB  7E                 	db	126
    92   000DBC  38                 	db	56
    93   000DBD  FA                 	db	250
    94   000DBE  DE                 	db	222
    95                           
    96                           ;initializer for _tone_list_H
    97   000DBF  0D                 	db	13
    98   000DC0  0B                 	db	11
    99   000DC1  0B                 	db	11
   100   000DC2  09                 	db	9
   101   000DC3  08                 	db	8
   102   000DC4  07                 	db	7
   103   000DC5  07                 	db	7
   104   000DC6  06                 	db	6
   105   000DC7  05                 	db	5
   106   000DC8  05                 	db	5
   107   000DC9  04                 	db	4
   108   000DCA  04                 	db	4
   109   000DCB  03                 	db	3
   110   000DCC  03                 	db	3
   111   000DCD  03                 	db	3
   112   000DCE  02                 	db	2
   113   000DCF  02                 	db	2
   114   000DD0  02                 	db	2
   115   000DD1  02                 	db	2
   116   000DD2  01                 	db	1
   117   000DD3  01                 	db	1
   118   000000                     _RCREG	set	4014
   119   000000                     _TXREG	set	4013
   120   000000                     _SPBRG	set	4015
   121   000000                     _TRISBbits	set	3987
   122   000000                     _TRISCbits	set	3988
   123   000000                     _ADCON0bits	set	4034
   124   000000                     _ADRESL	set	4035
   125   000000                     _ADRESH	set	4036
   126   000000                     _ADCON1	set	4033
   127   000000                     _ADFM	set	32263
   128                           
   129                           	psect	nvCOMRAM
   130   000068                     __pnvCOMRAM:
   131                           	callstack 0
   132   000068                     _CCP1_L:
   133                           	callstack 0
   134   000068                     	ds	1
   135   000069                     _CCP1_H:
   136                           	callstack 0
   137   000069                     	ds	1
   138   000000                     _T3CON	set	4017
   139   000000                     _ADCON2bits	set	4032
   140   000000                     _CREN	set	32092
   141   000000                     _RCIF	set	31989
   142   000000                     _IRCF0	set	32412
   143   000000                     _IRCF1	set	32413
   144   000000                     _LATB	set	3978
   145   000000                     _TRISA	set	3986
   146   000000                     _PIR1bits	set	3998
   147   000000                     _TMR3L	set	4018
   148   000000                     _TMR3H	set	4019
   149   000000                     _CCPR1L	set	4030
   150   000000                     _CCPR1H	set	4031
   151   000000                     _BAUDCONbits	set	4024
   152   000000                     _CCP1CON	set	4029
   153   000000                     _RCSTAbits	set	4011
   154   000000                     _TXSTAbits	set	4012
   155   000000                     _IPR1bits	set	3999
   156   000000                     _T3CONbits	set	4017
   157   000000                     _RCONbits	set	4048
   158   000000                     _INTCONbits	set	4082
   159   000000                     _PIE1bits	set	3997
   160   000000                     _IRCF2	set	32414
   161   000000                     _LATCbits	set	3979
   162                           
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   000D36                     __pcinit:
   167                           	callstack 0
   168   000D36                     start_initialization:
   169                           	callstack 0
   170   000D36                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (42 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175   000D36  0EAA               	movlw	low __pidataCOMRAM
   176   000D38  6EF6               	movwf	tblptrl,c
   177   000D3A  0E0D               	movlw	high __pidataCOMRAM
   178   000D3C  6EF7               	movwf	tblptrh,c
   179   000D3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180   000D40  6EF8               	movwf	tblptru,c
   181   000D42  EE00  F02E         	lfsr	0,__pdataCOMRAM
   182   000D46  EE10 F02A          	lfsr	1,42
   183   000D4A                     copy_data0:
   184   000D4A  0009               	tblrd		*+
   185   000D4C  CFF5 FFEE          	movff	tablat,postinc0
   186   000D50  50E5               	movf	postdec1,w,c
   187   000D52  50E1               	movf	fsr1l,w,c
   188   000D54  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to COMRAM (45 bytes)
   191   000D56  EE00  F001         	lfsr	0,__pbssCOMRAM
   192   000D5A  0E2D               	movlw	45
   193   000D5C                     clear_0:
   194   000D5C  6AEE               	clrf	postinc0,c
   195   000D5E  06E8               	decf	wreg,f,c
   196   000D60  E1FD               	bnz	clear_0
   197   000D62                     end_of_initialization:
   198                           	callstack 0
   199   000D62                     __end_of__initialization:
   200                           	callstack 0
   201   000D62  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   202   000D64  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   203   000D66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204   000D68  6EF8               	movwf	tblptru,c
   205   000D6A  0100               	movlb	0
   206   000D6C  EF1F  F006         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209   000001                     __pbssCOMRAM:
   210                           	callstack 0
   211   000001                     _lenStr:
   212                           	callstack 0
   213   000001                     	ds	2
   214   000003                     _tone_time:
   215                           	callstack 0
   216   000003                     	ds	1
   217   000004                     _curr_char:
   218                           	callstack 0
   219   000004                     	ds	1
   220   000005                     _tone:
   221                           	callstack 0
   222   000005                     	ds	1
   223   000006                     _mystring:
   224                           	callstack 0
   225   000006                     	ds	20
   226   00001A                     _str:
   227                           	callstack 0
   228   00001A                     	ds	20
   229                           
   230                           	psect	dataCOMRAM
   231   00002E                     __pdataCOMRAM:
   232                           	callstack 0
   233   00002E                     _tone_list_L:
   234                           	callstack 0
   235   00002E                     	ds	21
   236   000043                     _tone_list_H:
   237                           	callstack 0
   238   000043                     	ds	21
   239                           
   240                           	psect	cstackCOMRAM
   241   000058                     __pcstackCOMRAM:
   242                           	callstack 0
   243   000058                     ?___awmod:
   244                           	callstack 0
   245   000058                     UART_Write@data:
   246                           	callstack 0
   247   000058                     ___awmod@dividend:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x0
   251   000058                     	ds	2
   252   00005A                     ___awmod@divisor:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x2
   256   00005A                     	ds	2
   257   00005C                     ___awmod@counter:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x4
   261   00005C                     	ds	1
   262   00005D                     ___awmod@sign:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x5
   266   00005D                     	ds	1
   267   00005E                     ??_Lo_ISR:
   268                           
   269                           ; 1 bytes @ 0x6
   270   00005E                     	ds	5
   271   000063                     ?_ValidTone:
   272                           	callstack 0
   273   000063                     ClearBuffer@i:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xB
   277   000063                     	ds	2
   278   000065                     ??_MatchTone:
   279   000065                     ValidTone@tone:
   280                           	callstack 0
   281   000065                     strcpy@dest:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xD
   285   000065                     	ds	1
   286   000066                     strcpy@src:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xE
   290   000066                     	ds	1
   291   000067                     strcpy@d:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xF
   295   000067                     	ds	1
   296   000068                     
   297                           ; 1 bytes @ 0x10
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 36 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   317 ;;      Params:         0       0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels required when called: 6
   323 ;; This function calls:
   324 ;;		_GetString
   325 ;;		_MatchTone
   326 ;;		_SYSTEM_Initialize
   327 ;;		_ValidTone
   328 ;;		_strcpy
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   000C3E                     __ptext0:
   336                           	callstack 0
   337   000C3E                     _main:
   338                           	callstack 25
   339   000C3E                     
   340                           ;main.c: 37:     SYSTEM_Initialize() ;
   341   000C3E  ECFF  F006         	call	_SYSTEM_Initialize	;wreg free
   342   000C42                     
   343                           ;main.c: 39:     tone = 0;
   344   000C42  0E00               	movlw	0
   345   000C44  6E05               	movwf	_tone^0,c
   346   000C46                     
   347                           ;main.c: 40:     tone_time = 0;
   348   000C46  0E00               	movlw	0
   349   000C48  6E03               	movwf	_tone_time^0,c
   350   000C4A                     
   351                           ;main.c: 41:     curr_char = '\0';
   352   000C4A  0E00               	movlw	0
   353   000C4C  6E04               	movwf	_curr_char^0,c
   354   000C4E                     
   355                           ;main.c: 42:     CCP1_H = tone_list_H[tone];
   356   000C4E  C043  F069         	movff	_tone_list_H,_CCP1_H
   357   000C52                     
   358                           ;main.c: 43:     CCP1_L = tone_list_L[tone];
   359   000C52  C02E  F068         	movff	_tone_list_L,_CCP1_L
   360   000C56                     l1404:
   361                           
   362                           ;main.c: 46:         strcpy(str, GetString());
   363   000C56  0E1A               	movlw	low _str
   364   000C58  6E65               	movwf	strcpy@dest^0,c
   365   000C5A  EC30  F007         	call	_GetString	;wreg free
   366   000C5E  6E66               	movwf	strcpy@src^0,c
   367   000C60  ECEA  F006         	call	_strcpy	;wreg free
   368   000C64                     
   369                           ;main.c: 47:         MatchTone();
   370   000C64  EC7E  F004         	call	_MatchTone	;wreg free
   371   000C68                     
   372                           ;main.c: 48:         CCPR1H = CCP1_H;
   373   000C68  C069  FFBF         	movff	_CCP1_H,4031	;volatile
   374   000C6C                     
   375                           ;main.c: 49:         CCPR1L = CCP1_L;
   376   000C6C  C068  FFBE         	movff	_CCP1_L,4030	;volatile
   377   000C70                     
   378                           ;main.c: 50:         TMR3H = 0;
   379   000C70  0E00               	movlw	0
   380   000C72  6EB3               	movwf	179,c	;volatile
   381   000C74                     
   382                           ;main.c: 51:         TMR3L = 0;
   383   000C74  0E00               	movlw	0
   384   000C76  6EB2               	movwf	178,c	;volatile
   385   000C78                     
   386                           ;main.c: 52:         PIR1bits.CCP1IF = 0;
   387   000C78  949E               	bcf	158,2,c	;volatile
   388   000C7A                     
   389                           ;main.c: 53:         if(tone_time > 0 && ValidTone(curr_char)){
   390   000C7A  5003               	movf	_tone_time^0,w,c
   391   000C7C  B4D8               	btfsc	status,2,c
   392   000C7E  EF43  F006         	goto	u1101
   393   000C82  EF45  F006         	goto	u1100
   394   000C86                     u1101:
   395   000C86  EF2B  F006         	goto	l1404
   396   000C8A                     u1100:
   397   000C8A  5004               	movf	_curr_char^0,w,c
   398   000C8C  EC01  F003         	call	_ValidTone
   399   000C90  5063               	movf	?_ValidTone^0,w,c
   400   000C92  1064               	iorwf	(?_ValidTone+1)^0,w,c
   401   000C94  B4D8               	btfsc	status,2,c
   402   000C96  EF4F  F006         	goto	u1111
   403   000C9A  EF51  F006         	goto	u1110
   404   000C9E                     u1111:
   405   000C9E  EF2B  F006         	goto	l1404
   406   000CA2                     u1110:
   407   000CA2                     
   408                           ;main.c: 54:             tone_time--;
   409   000CA2  0603               	decf	_tone_time^0,f,c
   410   000CA4                     
   411                           ;main.c: 55:             T3CONbits.TMR3ON = 1;
   412   000CA4  80B1               	bsf	177,0,c	;volatile
   413   000CA6                     l52:
   414   000CA6  A49E               	btfss	158,2,c	;volatile
   415   000CA8  EF58  F006         	goto	u1121
   416   000CAC  EF5A  F006         	goto	u1120
   417   000CB0                     u1121:
   418   000CB0  EF53  F006         	goto	l52
   419   000CB4                     u1120:
   420   000CB4                     
   421                           ;main.c: 57:             T3CONbits.TMR3ON = 0;
   422   000CB4  90B1               	bcf	177,0,c	;volatile
   423   000CB6  EF2B  F006         	goto	l1404
   424   000CBA  EF36  F000         	goto	start
   425   000CBE                     __end_of_main:
   426                           	callstack 0
   427                           
   428 ;; *************** function _strcpy *****************
   429 ;; Defined at:
   430 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  dest            1   13[COMRAM] PTR unsigned char 
   433 ;;		 -> str(20), 
   434 ;;  src             1   14[COMRAM] PTR const unsigned char 
   435 ;;		 -> mystring(20), 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  d               1   15[COMRAM] PTR unsigned char 
   438 ;;		 -> str(20), 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      PTR unsigned char 
   441 ;; Registers used:
   442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   448 ;;      Params:         2       0       0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0
   451 ;;      Totals:         3       0       0       0       0       0       0
   452 ;;Total ram usage:        3 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 4
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463   000DD4                     __ptext1:
   464                           	callstack 0
   465   000DD4                     _strcpy:
   466                           	callstack 26
   467   000DD4  C065  F067         	movff	strcpy@dest,strcpy@d
   468   000DD8                     l1288:
   469   000DD8  2A66               	incf	strcpy@src^0,f,c
   470   000DDA  0466               	decf	strcpy@src^0,w,c
   471   000DDC  6ED9               	movwf	fsr2l,c
   472   000DDE  6ADA               	clrf	fsr2h,c
   473   000DE0  2A67               	incf	strcpy@d^0,f,c
   474   000DE2  0467               	decf	strcpy@d^0,w,c
   475   000DE4  6EE1               	movwf	fsr1l,c
   476   000DE6  6AE2               	clrf	fsr1h,c
   477   000DE8  CFDF FFE7          	movff	indf2,indf1
   478   000DEC  50E7               	movf	indf1,w,c
   479   000DEE  A4D8               	btfss	status,2,c
   480   000DF0  EFFC  F006         	goto	u681
   481   000DF4  EFFE  F006         	goto	u680
   482   000DF8                     u681:
   483   000DF8  EFEC  F006         	goto	l1288
   484   000DFC                     u680:
   485   000DFC  0012               	return		;funcret
   486   000DFE                     __end_of_strcpy:
   487                           	callstack 0
   488                           
   489 ;; *************** function _ValidTone *****************
   490 ;; Defined at:
   491 ;;		line 64 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  tone            1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  tone            1   13[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  2   11[COMRAM] int 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         2       0       0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         3       0       0       0       0       0       0
   509 ;;Total ram usage:        3 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 4
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text2
   520   000602                     __ptext2:
   521                           	callstack 0
   522   000602                     _ValidTone:
   523                           	callstack 26
   524                           
   525                           ;incstack = 0
   526                           ;ValidTone@tone stored from wreg
   527   000602  6E65               	movwf	ValidTone@tone^0,c
   528   000604                     
   529                           ;main.c: 66:     if(tone == 'q' || tone == 'Q' || tone == 'w' || tone == 'W' || tone == 
      +                          'e' || tone == 'E' || tone == 'r' || tone == 'R' || tone == 't' || tone == 'T' ||
   530   000604  0E71               	movlw	113
   531   000606  1865               	xorwf	ValidTone@tone^0,w,c
   532   000608  B4D8               	btfsc	status,2,c
   533   00060A  EF09  F003         	goto	u691
   534   00060E  EF0B  F003         	goto	u690
   535   000612                     u691:
   536   000612  EF73  F004         	goto	l1372
   537   000616                     u690:
   538   000616  0E51               	movlw	81
   539   000618  1865               	xorwf	ValidTone@tone^0,w,c
   540   00061A  B4D8               	btfsc	status,2,c
   541   00061C  EF12  F003         	goto	u701
   542   000620  EF14  F003         	goto	u700
   543   000624                     u701:
   544   000624  EF73  F004         	goto	l1372
   545   000628                     u700:
   546   000628  0E77               	movlw	119
   547   00062A  1865               	xorwf	ValidTone@tone^0,w,c
   548   00062C  B4D8               	btfsc	status,2,c
   549   00062E  EF1B  F003         	goto	u711
   550   000632  EF1D  F003         	goto	u710
   551   000636                     u711:
   552   000636  EF73  F004         	goto	l1372
   553   00063A                     u710:
   554   00063A  0E57               	movlw	87
   555   00063C  1865               	xorwf	ValidTone@tone^0,w,c
   556   00063E  B4D8               	btfsc	status,2,c
   557   000640  EF24  F003         	goto	u721
   558   000644  EF26  F003         	goto	u720
   559   000648                     u721:
   560   000648  EF73  F004         	goto	l1372
   561   00064C                     u720:
   562   00064C  0E65               	movlw	101
   563   00064E  1865               	xorwf	ValidTone@tone^0,w,c
   564   000650  B4D8               	btfsc	status,2,c
   565   000652  EF2D  F003         	goto	u731
   566   000656  EF2F  F003         	goto	u730
   567   00065A                     u731:
   568   00065A  EF73  F004         	goto	l1372
   569   00065E                     u730:
   570   00065E  0E45               	movlw	69
   571   000660  1865               	xorwf	ValidTone@tone^0,w,c
   572   000662  B4D8               	btfsc	status,2,c
   573   000664  EF36  F003         	goto	u741
   574   000668  EF38  F003         	goto	u740
   575   00066C                     u741:
   576   00066C  EF73  F004         	goto	l1372
   577   000670                     u740:
   578   000670  0E72               	movlw	114
   579   000672  1865               	xorwf	ValidTone@tone^0,w,c
   580   000674  B4D8               	btfsc	status,2,c
   581   000676  EF3F  F003         	goto	u751
   582   00067A  EF41  F003         	goto	u750
   583   00067E                     u751:
   584   00067E  EF73  F004         	goto	l1372
   585   000682                     u750:
   586   000682  0E52               	movlw	82
   587   000684  1865               	xorwf	ValidTone@tone^0,w,c
   588   000686  B4D8               	btfsc	status,2,c
   589   000688  EF48  F003         	goto	u761
   590   00068C  EF4A  F003         	goto	u760
   591   000690                     u761:
   592   000690  EF73  F004         	goto	l1372
   593   000694                     u760:
   594   000694  0E74               	movlw	116
   595   000696  1865               	xorwf	ValidTone@tone^0,w,c
   596   000698  B4D8               	btfsc	status,2,c
   597   00069A  EF51  F003         	goto	u771
   598   00069E  EF53  F003         	goto	u770
   599   0006A2                     u771:
   600   0006A2  EF73  F004         	goto	l1372
   601   0006A6                     u770:
   602   0006A6  0E54               	movlw	84
   603   0006A8  1865               	xorwf	ValidTone@tone^0,w,c
   604   0006AA  B4D8               	btfsc	status,2,c
   605   0006AC  EF5A  F003         	goto	u781
   606   0006B0  EF5C  F003         	goto	u780
   607   0006B4                     u781:
   608   0006B4  EF73  F004         	goto	l1372
   609   0006B8                     u780:
   610   0006B8  0E79               	movlw	121
   611   0006BA  1865               	xorwf	ValidTone@tone^0,w,c
   612   0006BC  B4D8               	btfsc	status,2,c
   613   0006BE  EF63  F003         	goto	u791
   614   0006C2  EF65  F003         	goto	u790
   615   0006C6                     u791:
   616   0006C6  EF73  F004         	goto	l1372
   617   0006CA                     u790:
   618   0006CA  0E59               	movlw	89
   619   0006CC  1865               	xorwf	ValidTone@tone^0,w,c
   620   0006CE  B4D8               	btfsc	status,2,c
   621   0006D0  EF6C  F003         	goto	u801
   622   0006D4  EF6E  F003         	goto	u800
   623   0006D8                     u801:
   624   0006D8  EF73  F004         	goto	l1372
   625   0006DC                     u800:
   626   0006DC  0E64               	movlw	100
   627   0006DE  1865               	xorwf	ValidTone@tone^0,w,c
   628   0006E0  B4D8               	btfsc	status,2,c
   629   0006E2  EF75  F003         	goto	u811
   630   0006E6  EF77  F003         	goto	u810
   631   0006EA                     u811:
   632   0006EA  EF73  F004         	goto	l1372
   633   0006EE                     u810:
   634   0006EE  0E44               	movlw	68
   635   0006F0  1865               	xorwf	ValidTone@tone^0,w,c
   636   0006F2  B4D8               	btfsc	status,2,c
   637   0006F4  EF7E  F003         	goto	u821
   638   0006F8  EF80  F003         	goto	u820
   639   0006FC                     u821:
   640   0006FC  EF73  F004         	goto	l1372
   641   000700                     u820:
   642   000700  0E66               	movlw	102
   643   000702  1865               	xorwf	ValidTone@tone^0,w,c
   644   000704  B4D8               	btfsc	status,2,c
   645   000706  EF87  F003         	goto	u831
   646   00070A  EF89  F003         	goto	u830
   647   00070E                     u831:
   648   00070E  EF73  F004         	goto	l1372
   649   000712                     u830:
   650   000712  0E46               	movlw	70
   651   000714  1865               	xorwf	ValidTone@tone^0,w,c
   652   000716  B4D8               	btfsc	status,2,c
   653   000718  EF90  F003         	goto	u841
   654   00071C  EF92  F003         	goto	u840
   655   000720                     u841:
   656   000720  EF73  F004         	goto	l1372
   657   000724                     u840:
   658   000724  0E67               	movlw	103
   659   000726  1865               	xorwf	ValidTone@tone^0,w,c
   660   000728  B4D8               	btfsc	status,2,c
   661   00072A  EF99  F003         	goto	u851
   662   00072E  EF9B  F003         	goto	u850
   663   000732                     u851:
   664   000732  EF73  F004         	goto	l1372
   665   000736                     u850:
   666   000736  0E47               	movlw	71
   667   000738  1865               	xorwf	ValidTone@tone^0,w,c
   668   00073A  B4D8               	btfsc	status,2,c
   669   00073C  EFA2  F003         	goto	u861
   670   000740  EFA4  F003         	goto	u860
   671   000744                     u861:
   672   000744  EF73  F004         	goto	l1372
   673   000748                     u860:
   674   000748  0E68               	movlw	104
   675   00074A  1865               	xorwf	ValidTone@tone^0,w,c
   676   00074C  B4D8               	btfsc	status,2,c
   677   00074E  EFAB  F003         	goto	u871
   678   000752  EFAD  F003         	goto	u870
   679   000756                     u871:
   680   000756  EF73  F004         	goto	l1372
   681   00075A                     u870:
   682   00075A  0E48               	movlw	72
   683   00075C  1865               	xorwf	ValidTone@tone^0,w,c
   684   00075E  B4D8               	btfsc	status,2,c
   685   000760  EFB4  F003         	goto	u881
   686   000764  EFB6  F003         	goto	u880
   687   000768                     u881:
   688   000768  EF73  F004         	goto	l1372
   689   00076C                     u880:
   690   00076C  0E6A               	movlw	106
   691   00076E  1865               	xorwf	ValidTone@tone^0,w,c
   692   000770  B4D8               	btfsc	status,2,c
   693   000772  EFBD  F003         	goto	u891
   694   000776  EFBF  F003         	goto	u890
   695   00077A                     u891:
   696   00077A  EF73  F004         	goto	l1372
   697   00077E                     u890:
   698   00077E  0E4A               	movlw	74
   699   000780  1865               	xorwf	ValidTone@tone^0,w,c
   700   000782  B4D8               	btfsc	status,2,c
   701   000784  EFC6  F003         	goto	u901
   702   000788  EFC8  F003         	goto	u900
   703   00078C                     u901:
   704   00078C  EF73  F004         	goto	l1372
   705   000790                     u900:
   706   000790  0E6B               	movlw	107
   707   000792  1865               	xorwf	ValidTone@tone^0,w,c
   708   000794  B4D8               	btfsc	status,2,c
   709   000796  EFCF  F003         	goto	u911
   710   00079A  EFD1  F003         	goto	u910
   711   00079E                     u911:
   712   00079E  EF73  F004         	goto	l1372
   713   0007A2                     u910:
   714   0007A2  0E4B               	movlw	75
   715   0007A4  1865               	xorwf	ValidTone@tone^0,w,c
   716   0007A6  B4D8               	btfsc	status,2,c
   717   0007A8  EFD8  F003         	goto	u921
   718   0007AC  EFDA  F003         	goto	u920
   719   0007B0                     u921:
   720   0007B0  EF73  F004         	goto	l1372
   721   0007B4                     u920:
   722   0007B4  0E6C               	movlw	108
   723   0007B6  1865               	xorwf	ValidTone@tone^0,w,c
   724   0007B8  B4D8               	btfsc	status,2,c
   725   0007BA  EFE1  F003         	goto	u931
   726   0007BE  EFE3  F003         	goto	u930
   727   0007C2                     u931:
   728   0007C2  EF73  F004         	goto	l1372
   729   0007C6                     u930:
   730   0007C6  0E4C               	movlw	76
   731   0007C8  1865               	xorwf	ValidTone@tone^0,w,c
   732   0007CA  B4D8               	btfsc	status,2,c
   733   0007CC  EFEA  F003         	goto	u941
   734   0007D0  EFEC  F003         	goto	u940
   735   0007D4                     u941:
   736   0007D4  EF73  F004         	goto	l1372
   737   0007D8                     u940:
   738   0007D8  0E7A               	movlw	122
   739   0007DA  1865               	xorwf	ValidTone@tone^0,w,c
   740   0007DC  B4D8               	btfsc	status,2,c
   741   0007DE  EFF3  F003         	goto	u951
   742   0007E2  EFF5  F003         	goto	u950
   743   0007E6                     u951:
   744   0007E6  EF73  F004         	goto	l1372
   745   0007EA                     u950:
   746   0007EA  0E5A               	movlw	90
   747   0007EC  1865               	xorwf	ValidTone@tone^0,w,c
   748   0007EE  B4D8               	btfsc	status,2,c
   749   0007F0  EFFC  F003         	goto	u961
   750   0007F4  EFFE  F003         	goto	u960
   751   0007F8                     u961:
   752   0007F8  EF73  F004         	goto	l1372
   753   0007FC                     u960:
   754   0007FC  0E78               	movlw	120
   755   0007FE  1865               	xorwf	ValidTone@tone^0,w,c
   756   000800  B4D8               	btfsc	status,2,c
   757   000802  EF05  F004         	goto	u971
   758   000806  EF07  F004         	goto	u970
   759   00080A                     u971:
   760   00080A  EF73  F004         	goto	l1372
   761   00080E                     u970:
   762   00080E  0E58               	movlw	88
   763   000810  1865               	xorwf	ValidTone@tone^0,w,c
   764   000812  B4D8               	btfsc	status,2,c
   765   000814  EF0E  F004         	goto	u981
   766   000818  EF10  F004         	goto	u980
   767   00081C                     u981:
   768   00081C  EF73  F004         	goto	l1372
   769   000820                     u980:
   770   000820  0E63               	movlw	99
   771   000822  1865               	xorwf	ValidTone@tone^0,w,c
   772   000824  B4D8               	btfsc	status,2,c
   773   000826  EF17  F004         	goto	u991
   774   00082A  EF19  F004         	goto	u990
   775   00082E                     u991:
   776   00082E  EF73  F004         	goto	l1372
   777   000832                     u990:
   778   000832  0E43               	movlw	67
   779   000834  1865               	xorwf	ValidTone@tone^0,w,c
   780   000836  B4D8               	btfsc	status,2,c
   781   000838  EF20  F004         	goto	u1001
   782   00083C  EF22  F004         	goto	u1000
   783   000840                     u1001:
   784   000840  EF73  F004         	goto	l1372
   785   000844                     u1000:
   786   000844  0E76               	movlw	118
   787   000846  1865               	xorwf	ValidTone@tone^0,w,c
   788   000848  B4D8               	btfsc	status,2,c
   789   00084A  EF29  F004         	goto	u1011
   790   00084E  EF2B  F004         	goto	u1010
   791   000852                     u1011:
   792   000852  EF73  F004         	goto	l1372
   793   000856                     u1010:
   794   000856  0E56               	movlw	86
   795   000858  1865               	xorwf	ValidTone@tone^0,w,c
   796   00085A  B4D8               	btfsc	status,2,c
   797   00085C  EF32  F004         	goto	u1021
   798   000860  EF34  F004         	goto	u1020
   799   000864                     u1021:
   800   000864  EF73  F004         	goto	l1372
   801   000868                     u1020:
   802   000868  0E62               	movlw	98
   803   00086A  1865               	xorwf	ValidTone@tone^0,w,c
   804   00086C  B4D8               	btfsc	status,2,c
   805   00086E  EF3B  F004         	goto	u1031
   806   000872  EF3D  F004         	goto	u1030
   807   000876                     u1031:
   808   000876  EF73  F004         	goto	l1372
   809   00087A                     u1030:
   810   00087A  0E42               	movlw	66
   811   00087C  1865               	xorwf	ValidTone@tone^0,w,c
   812   00087E  B4D8               	btfsc	status,2,c
   813   000880  EF44  F004         	goto	u1041
   814   000884  EF46  F004         	goto	u1040
   815   000888                     u1041:
   816   000888  EF73  F004         	goto	l1372
   817   00088C                     u1040:
   818   00088C  0E6E               	movlw	110
   819   00088E  1865               	xorwf	ValidTone@tone^0,w,c
   820   000890  B4D8               	btfsc	status,2,c
   821   000892  EF4D  F004         	goto	u1051
   822   000896  EF4F  F004         	goto	u1050
   823   00089A                     u1051:
   824   00089A  EF73  F004         	goto	l1372
   825   00089E                     u1050:
   826   00089E  0E4E               	movlw	78
   827   0008A0  1865               	xorwf	ValidTone@tone^0,w,c
   828   0008A2  B4D8               	btfsc	status,2,c
   829   0008A4  EF56  F004         	goto	u1061
   830   0008A8  EF58  F004         	goto	u1060
   831   0008AC                     u1061:
   832   0008AC  EF73  F004         	goto	l1372
   833   0008B0                     u1060:
   834   0008B0  0E6D               	movlw	109
   835   0008B2  1865               	xorwf	ValidTone@tone^0,w,c
   836   0008B4  B4D8               	btfsc	status,2,c
   837   0008B6  EF5F  F004         	goto	u1071
   838   0008BA  EF61  F004         	goto	u1070
   839   0008BE                     u1071:
   840   0008BE  EF73  F004         	goto	l1372
   841   0008C2                     u1070:
   842   0008C2  0E4D               	movlw	77
   843   0008C4  1865               	xorwf	ValidTone@tone^0,w,c
   844   0008C6  B4D8               	btfsc	status,2,c
   845   0008C8  EF68  F004         	goto	u1081
   846   0008CC  EF6A  F004         	goto	u1080
   847   0008D0                     u1081:
   848   0008D0  EF73  F004         	goto	l1372
   849   0008D4                     u1080:
   850   0008D4  0E2C               	movlw	44
   851   0008D6  1865               	xorwf	ValidTone@tone^0,w,c
   852   0008D8  A4D8               	btfss	status,2,c
   853   0008DA  EF71  F004         	goto	u1091
   854   0008DE  EF73  F004         	goto	u1090
   855   0008E2                     u1091:
   856   0008E2  EF79  F004         	goto	l1378
   857   0008E6                     u1090:
   858   0008E6                     l1372:
   859                           
   860                           ;main.c: 70:         return 1;
   861   0008E6  0E00               	movlw	0
   862   0008E8  6E64               	movwf	(?_ValidTone+1)^0,c
   863   0008EA  0E01               	movlw	1
   864   0008EC  6E63               	movwf	?_ValidTone^0,c
   865   0008EE  EF7D  F004         	goto	l63
   866   0008F2                     l1378:
   867   0008F2  0E00               	movlw	0
   868   0008F4  6E64               	movwf	(?_ValidTone+1)^0,c
   869   0008F6  0E00               	movlw	0
   870   0008F8  6E63               	movwf	?_ValidTone^0,c
   871   0008FA                     l63:
   872   0008FA  0012               	return		;funcret
   873   0008FC                     __end_of_ValidTone:
   874                           	callstack 0
   875                           
   876 ;; *************** function _SYSTEM_Initialize *****************
   877 ;; Defined at:
   878 ;;		line 60 in file "setting_hardaware/setting.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   892 ;;      Params:         0       0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 5
   899 ;; This function calls:
   900 ;;		_INTERRUPT_Initialize
   901 ;;		_OSCILLATOR_Initialize
   902 ;;		_UART_Initialize
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text3
   909   000DFE                     __ptext3:
   910                           	callstack 0
   911   000DFE                     _SYSTEM_Initialize:
   912                           	callstack 25
   913   000DFE                     
   914                           ;setting_hardaware/setting.c: 62:     CCP1CON = 0x02;
   915   000DFE  0E02               	movlw	2
   916   000E00  6EBD               	movwf	189,c	;volatile
   917   000E02                     
   918                           ;setting_hardaware/setting.c: 64:     TRISBbits.RB0 = 1;
   919   000E02  8093               	bsf	147,0,c	;volatile
   920                           
   921                           ;setting_hardaware/setting.c: 65:     LATB = 0;
   922   000E04  0E00               	movlw	0
   923   000E06  6E8A               	movwf	138,c	;volatile
   924   000E08                     
   925                           ;setting_hardaware/setting.c: 66:     TRISCbits.RC2 = 0;
   926   000E08  9494               	bcf	148,2,c	;volatile
   927                           
   928                           ;setting_hardaware/setting.c: 67:     T3CON = 0x40;
   929   000E0A  0E40               	movlw	64
   930   000E0C  6EB1               	movwf	177,c	;volatile
   931   000E0E                     
   932                           ;setting_hardaware/setting.c: 70:     TRISCbits.RC3 = 0;
   933   000E0E  9694               	bcf	148,3,c	;volatile
   934   000E10                     
   935                           ;setting_hardaware/setting.c: 71:     LATCbits.LC3 = 1;
   936   000E10  868B               	bsf	139,3,c	;volatile
   937                           
   938                           ;setting_hardaware/setting.c: 73:     ADCON1 = 0x0f;
   939   000E12  0E0F               	movlw	15
   940   000E14  6EC1               	movwf	193,c	;volatile
   941   000E16                     
   942                           ;setting_hardaware/setting.c: 75:     OSCILLATOR_Initialize();
   943   000E16  EC29  F007         	call	_OSCILLATOR_Initialize	;wreg free
   944   000E1A                     
   945                           ;setting_hardaware/setting.c: 79:     INTERRUPT_Initialize();
   946   000E1A  EC23  F007         	call	_INTERRUPT_Initialize	;wreg free
   947   000E1E                     
   948                           ;setting_hardaware/setting.c: 80:     UART_Initialize();
   949   000E1E  EC12  F007         	call	_UART_Initialize	;wreg free
   950   000E22  0012               	return		;funcret
   951   000E24                     __end_of_SYSTEM_Initialize:
   952                           	callstack 0
   953                           
   954 ;; *************** function _UART_Initialize *****************
   955 ;; Defined at:
   956 ;;		line 7 in file "setting_hardaware/uart.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 4
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_SYSTEM_Initialize
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text4
   985   000E24                     __ptext4:
   986                           	callstack 0
   987   000E24                     _UART_Initialize:
   988                           	callstack 25
   989   000E24                     
   990                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   991   000E24  8C94               	bsf	148,6,c	;volatile
   992                           
   993                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   994   000E26  8E94               	bsf	148,7,c	;volatile
   995                           
   996                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
   997   000E28  98AC               	bcf	172,4,c	;volatile
   998                           
   999                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
  1000   000E2A  94AC               	bcf	172,2,c	;volatile
  1001                           
  1002                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
  1003   000E2C  96B8               	bcf	184,3,c	;volatile
  1004   000E2E                     
  1005                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
  1006   000E2E  0E33               	movlw	51
  1007   000E30  6EAF               	movwf	175,c	;volatile
  1008   000E32                     
  1009                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  1010   000E32  8EAB               	bsf	171,7,c	;volatile
  1011   000E34                     
  1012                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  1013   000E34  889E               	bsf	158,4,c	;volatile
  1014   000E36                     
  1015                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  1016   000E36  9A9E               	bcf	158,5,c	;volatile
  1017   000E38                     
  1018                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  1019   000E38  8AAC               	bsf	172,5,c	;volatile
  1020   000E3A                     
  1021                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  1022   000E3A  88AB               	bsf	171,4,c	;volatile
  1023   000E3C                     
  1024                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  1025   000E3C  989D               	bcf	157,4,c	;volatile
  1026   000E3E                     
  1027                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  1028   000E3E  989F               	bcf	159,4,c	;volatile
  1029   000E40                     
  1030                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  1031   000E40  8A9D               	bsf	157,5,c	;volatile
  1032   000E42                     
  1033                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  1034   000E42  9A9F               	bcf	159,5,c	;volatile
  1035   000E44  0012               	return		;funcret
  1036   000E46                     __end_of_UART_Initialize:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _OSCILLATOR_Initialize *****************
  1040 ;; Defined at:
  1041 ;;		line 85 in file "setting_hardaware/setting.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		None
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 4
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_SYSTEM_Initialize
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text5
  1070   000E52                     __ptext5:
  1071                           	callstack 0
  1072   000E52                     _OSCILLATOR_Initialize:
  1073                           	callstack 25
  1074   000E52                     
  1075                           ;setting_hardaware/setting.c: 87:     IRCF2 = 1;
  1076   000E52  8CD3               	bsf	4051,6,c	;volatile
  1077                           
  1078                           ;setting_hardaware/setting.c: 88:     IRCF1 = 1;
  1079   000E54  8AD3               	bsf	4051,5,c	;volatile
  1080                           
  1081                           ;setting_hardaware/setting.c: 89:     IRCF0 = 0;
  1082   000E56  98D3               	bcf	4051,4,c	;volatile
  1083   000E58  0012               	return		;funcret
  1084   000E5A                     __end_of_OSCILLATOR_Initialize:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _INTERRUPT_Initialize *****************
  1088 ;; Defined at:
  1089 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		None
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 4
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_SYSTEM_Initialize
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text6
  1118   000E46                     __ptext6:
  1119                           	callstack 0
  1120   000E46                     _INTERRUPT_Initialize:
  1121                           	callstack 25
  1122   000E46                     
  1123                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.INT0IF = 0;
  1124   000E46  92F2               	bcf	242,1,c	;volatile
  1125                           
  1126                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.INT0IE = 1;
  1127   000E48  88F2               	bsf	242,4,c	;volatile
  1128                           
  1129                           ;setting_hardaware/interrupt_manager.c: 9:     RCONbits.IPEN = 1;
  1130   000E4A  8ED0               	bsf	208,7,c	;volatile
  1131                           
  1132                           ;setting_hardaware/interrupt_manager.c: 10:     INTCONbits.GIEH = 1;
  1133   000E4C  8EF2               	bsf	242,7,c	;volatile
  1134                           
  1135                           ;setting_hardaware/interrupt_manager.c: 11:     INTCONbits.GIEL = 1;
  1136   000E4E  8CF2               	bsf	242,6,c	;volatile
  1137   000E50  0012               	return		;funcret
  1138   000E52                     __end_of_INTERRUPT_Initialize:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _MatchTone *****************
  1142 ;; Defined at:
  1143 ;;		line 75 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0       0       0
  1160 ;;      Totals:         2       0       0       0       0       0       0
  1161 ;;Total ram usage:        2 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 5
  1164 ;; This function calls:
  1165 ;;		_ClearBuffer
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text7
  1172   0008FC                     __ptext7:
  1173                           	callstack 0
  1174   0008FC                     _MatchTone:
  1175                           	callstack 25
  1176   0008FC                     
  1177                           ;main.c: 76:     if(str[0] != '\0'){
  1178   0008FC  501A               	movf	_str^0,w,c
  1179   0008FE  B4D8               	btfsc	status,2,c
  1180   000900  EF84  F004         	goto	u121
  1181   000904  EF86  F004         	goto	u120
  1182   000908                     u121:
  1183   000908  EFC6  F005         	goto	l112
  1184   00090C                     u120:
  1185   00090C                     
  1186                           ;main.c: 77:         tone_time = 200;
  1187   00090C  0EC8               	movlw	200
  1188   00090E  6E03               	movwf	_tone_time^0,c
  1189   000910                     
  1190                           ;main.c: 78:         if(str[0] != curr_char){
  1191   000910  5004               	movf	_curr_char^0,w,c
  1192   000912  181A               	xorwf	_str^0,w,c
  1193   000914  B4D8               	btfsc	status,2,c
  1194   000916  EF8F  F004         	goto	u131
  1195   00091A  EF91  F004         	goto	u130
  1196   00091E                     u131:
  1197   00091E  EFC4  F005         	goto	l1056
  1198   000922                     u130:
  1199   000922                     
  1200                           ;main.c: 79:             curr_char = str[0];
  1201   000922  C01A  F004         	movff	_str,_curr_char
  1202                           
  1203                           ;main.c: 80:             switch(str[0]){
  1204   000926  EF13  F005         	goto	l1054
  1205   00092A                     l71:
  1206                           
  1207                           ;main.c: 83:                     CCP1_H = tone_list_H[0];
  1208   00092A  C043  F069         	movff	_tone_list_H,_CCP1_H
  1209                           
  1210                           ;main.c: 84:                     CCP1_L = tone_list_L[0];
  1211   00092E  C02E  F068         	movff	_tone_list_L,_CCP1_L
  1212                           
  1213                           ;main.c: 85:                     break;
  1214   000932  EFC4  F005         	goto	l1056
  1215   000936                     l74:
  1216                           
  1217                           ;main.c: 88:                     CCP1_H = tone_list_H[1];
  1218   000936  C044  F069         	movff	_tone_list_H+1,_CCP1_H
  1219                           
  1220                           ;main.c: 89:                     CCP1_L = tone_list_L[1];
  1221   00093A  C02F  F068         	movff	_tone_list_L+1,_CCP1_L
  1222                           
  1223                           ;main.c: 90:                     break;
  1224   00093E  EFC4  F005         	goto	l1056
  1225   000942                     l76:
  1226                           
  1227                           ;main.c: 93:                     CCP1_H = tone_list_H[2];
  1228   000942  C045  F069         	movff	_tone_list_H+2,_CCP1_H
  1229                           
  1230                           ;main.c: 94:                     CCP1_L = tone_list_L[2];
  1231   000946  C030  F068         	movff	_tone_list_L+2,_CCP1_L
  1232                           
  1233                           ;main.c: 95:                     break;
  1234   00094A  EFC4  F005         	goto	l1056
  1235   00094E                     l78:
  1236                           
  1237                           ;main.c: 98:                     CCP1_H = tone_list_H[3];
  1238   00094E  C046  F069         	movff	_tone_list_H+3,_CCP1_H
  1239                           
  1240                           ;main.c: 99:                     CCP1_L = tone_list_L[3];
  1241   000952  C031  F068         	movff	_tone_list_L+3,_CCP1_L
  1242                           
  1243                           ;main.c: 100:                     break;
  1244   000956  EFC4  F005         	goto	l1056
  1245   00095A                     l80:
  1246                           
  1247                           ;main.c: 103:                     CCP1_H = tone_list_H[4];
  1248   00095A  C047  F069         	movff	_tone_list_H+4,_CCP1_H
  1249                           
  1250                           ;main.c: 104:                     CCP1_L = tone_list_L[4];
  1251   00095E  C032  F068         	movff	_tone_list_L+4,_CCP1_L
  1252                           
  1253                           ;main.c: 105:                     break;
  1254   000962  EFC4  F005         	goto	l1056
  1255   000966                     l82:
  1256                           
  1257                           ;main.c: 108:                     CCP1_H = tone_list_H[5];
  1258   000966  C048  F069         	movff	_tone_list_H+5,_CCP1_H
  1259                           
  1260                           ;main.c: 109:                     CCP1_L = tone_list_L[5];
  1261   00096A  C033  F068         	movff	_tone_list_L+5,_CCP1_L
  1262                           
  1263                           ;main.c: 110:                     break;
  1264   00096E  EFC4  F005         	goto	l1056
  1265   000972                     l84:
  1266                           
  1267                           ;main.c: 113:                     CCP1_H = tone_list_H[6];
  1268   000972  C049  F069         	movff	_tone_list_H+6,_CCP1_H
  1269                           
  1270                           ;main.c: 114:                     CCP1_L = tone_list_L[6];
  1271   000976  C034  F068         	movff	_tone_list_L+6,_CCP1_L
  1272                           
  1273                           ;main.c: 115:                     break;
  1274   00097A  EFC4  F005         	goto	l1056
  1275   00097E                     l86:
  1276                           
  1277                           ;main.c: 118:                     CCP1_H = tone_list_H[7];
  1278   00097E  C04A  F069         	movff	_tone_list_H+7,_CCP1_H
  1279                           
  1280                           ;main.c: 119:                     CCP1_L = tone_list_L[7];
  1281   000982  C035  F068         	movff	_tone_list_L+7,_CCP1_L
  1282                           
  1283                           ;main.c: 120:                     break;
  1284   000986  EFC4  F005         	goto	l1056
  1285   00098A                     l88:
  1286                           
  1287                           ;main.c: 123:                     CCP1_H = tone_list_H[8];
  1288   00098A  C04B  F069         	movff	_tone_list_H+8,_CCP1_H
  1289                           
  1290                           ;main.c: 124:                     CCP1_L = tone_list_L[8];
  1291   00098E  C036  F068         	movff	_tone_list_L+8,_CCP1_L
  1292                           
  1293                           ;main.c: 125:                     break;
  1294   000992  EFC4  F005         	goto	l1056
  1295   000996                     l90:
  1296                           
  1297                           ;main.c: 128:                     CCP1_H = tone_list_H[9];
  1298   000996  C04C  F069         	movff	_tone_list_H+9,_CCP1_H
  1299                           
  1300                           ;main.c: 129:                     CCP1_L = tone_list_L[9];
  1301   00099A  C037  F068         	movff	_tone_list_L+9,_CCP1_L
  1302                           
  1303                           ;main.c: 130:                     break;
  1304   00099E  EFC4  F005         	goto	l1056
  1305   0009A2                     l92:
  1306                           
  1307                           ;main.c: 133:                     CCP1_H = tone_list_H[10];
  1308   0009A2  C04D  F069         	movff	_tone_list_H+10,_CCP1_H
  1309                           
  1310                           ;main.c: 134:                     CCP1_L = tone_list_L[10];
  1311   0009A6  C038  F068         	movff	_tone_list_L+10,_CCP1_L
  1312                           
  1313                           ;main.c: 135:                     break;
  1314   0009AA  EFC4  F005         	goto	l1056
  1315   0009AE                     l94:
  1316                           
  1317                           ;main.c: 138:                     CCP1_H = tone_list_H[11];
  1318   0009AE  C04E  F069         	movff	_tone_list_H+11,_CCP1_H
  1319                           
  1320                           ;main.c: 139:                     CCP1_L = tone_list_L[11];
  1321   0009B2  C039  F068         	movff	_tone_list_L+11,_CCP1_L
  1322                           
  1323                           ;main.c: 140:                     break;
  1324   0009B6  EFC4  F005         	goto	l1056
  1325   0009BA                     l96:
  1326                           
  1327                           ;main.c: 143:                     CCP1_H = tone_list_H[12];
  1328   0009BA  C04F  F069         	movff	_tone_list_H+12,_CCP1_H
  1329                           
  1330                           ;main.c: 144:                     CCP1_L = tone_list_L[12];
  1331   0009BE  C03A  F068         	movff	_tone_list_L+12,_CCP1_L
  1332                           
  1333                           ;main.c: 145:                     break;
  1334   0009C2  EFC4  F005         	goto	l1056
  1335   0009C6                     l98:
  1336                           
  1337                           ;main.c: 148:                     CCP1_H = tone_list_H[13];
  1338   0009C6  C050  F069         	movff	_tone_list_H+13,_CCP1_H
  1339                           
  1340                           ;main.c: 149:                     CCP1_L = tone_list_L[13];
  1341   0009CA  C03B  F068         	movff	_tone_list_L+13,_CCP1_L
  1342                           
  1343                           ;main.c: 150:                     break;
  1344   0009CE  EFC4  F005         	goto	l1056
  1345   0009D2                     l100:
  1346                           
  1347                           ;main.c: 153:                     CCP1_H = tone_list_H[14];
  1348   0009D2  C051  F069         	movff	_tone_list_H+14,_CCP1_H
  1349                           
  1350                           ;main.c: 154:                     CCP1_L = tone_list_L[14];
  1351   0009D6  C03C  F068         	movff	_tone_list_L+14,_CCP1_L
  1352                           
  1353                           ;main.c: 155:                     break;
  1354   0009DA  EFC4  F005         	goto	l1056
  1355   0009DE                     l102:
  1356                           
  1357                           ;main.c: 158:                     CCP1_H = tone_list_H[15];
  1358   0009DE  C052  F069         	movff	_tone_list_H+15,_CCP1_H
  1359                           
  1360                           ;main.c: 159:                     CCP1_L = tone_list_L[15];
  1361   0009E2  C03D  F068         	movff	_tone_list_L+15,_CCP1_L
  1362                           
  1363                           ;main.c: 160:                     break;
  1364   0009E6  EFC4  F005         	goto	l1056
  1365   0009EA                     l104:
  1366                           
  1367                           ;main.c: 163:                     CCP1_H = tone_list_H[16];
  1368   0009EA  C053  F069         	movff	_tone_list_H+16,_CCP1_H
  1369                           
  1370                           ;main.c: 164:                     CCP1_L = tone_list_L[16];
  1371   0009EE  C03E  F068         	movff	_tone_list_L+16,_CCP1_L
  1372                           
  1373                           ;main.c: 165:                     break;
  1374   0009F2  EFC4  F005         	goto	l1056
  1375   0009F6                     l106:
  1376                           
  1377                           ;main.c: 168:                     CCP1_H = tone_list_H[17];
  1378   0009F6  C054  F069         	movff	_tone_list_H+17,_CCP1_H
  1379                           
  1380                           ;main.c: 169:                     CCP1_L = tone_list_L[17];
  1381   0009FA  C03F  F068         	movff	_tone_list_L+17,_CCP1_L
  1382                           
  1383                           ;main.c: 170:                     break;
  1384   0009FE  EFC4  F005         	goto	l1056
  1385   000A02                     l108:
  1386                           
  1387                           ;main.c: 173:                     CCP1_H = tone_list_H[18];
  1388   000A02  C055  F069         	movff	_tone_list_H+18,_CCP1_H
  1389                           
  1390                           ;main.c: 174:                     CCP1_L = tone_list_L[18];
  1391   000A06  C040  F068         	movff	_tone_list_L+18,_CCP1_L
  1392                           
  1393                           ;main.c: 175:                     break;
  1394   000A0A  EFC4  F005         	goto	l1056
  1395   000A0E                     l110:
  1396                           
  1397                           ;main.c: 178:                     CCP1_H = tone_list_H[19];
  1398   000A0E  C056  F069         	movff	_tone_list_H+19,_CCP1_H
  1399                           
  1400                           ;main.c: 179:                     CCP1_L = tone_list_L[19];
  1401   000A12  C041  F068         	movff	_tone_list_L+19,_CCP1_L
  1402                           
  1403                           ;main.c: 180:                     break;
  1404   000A16  EFC4  F005         	goto	l1056
  1405   000A1A                     l111:
  1406                           
  1407                           ;main.c: 182:                     CCP1_H = tone_list_H[20];
  1408   000A1A  C057  F069         	movff	_tone_list_H+20,_CCP1_H
  1409                           
  1410                           ;main.c: 183:                     CCP1_L = tone_list_L[20];
  1411   000A1E  C042  F068         	movff	_tone_list_L+20,_CCP1_L
  1412                           
  1413                           ;main.c: 184:                     break;
  1414   000A22  EFC4  F005         	goto	l1056
  1415   000A26                     l1054:
  1416   000A26  501A               	movf	_str^0,w,c
  1417   000A28  6E65               	movwf	??_MatchTone^0,c
  1418   000A2A  6A66               	clrf	(??_MatchTone+1)^0,c
  1419                           
  1420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1421                           ; Switch size 1, requested type "simple"
  1422                           ; Number of cases is 1, Range of values is 0 to 0
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte            4     3 (average)
  1426                           ;	Chosen strategy is simple_byte
  1427   000A2C  5066               	movf	(??_MatchTone+1)^0,w,c
  1428   000A2E  0A00               	xorlw	0	; case 0
  1429   000A30  B4D8               	btfsc	status,2,c
  1430   000A32  EF1D  F005         	goto	l1440
  1431   000A36  EFC4  F005         	goto	l1056
  1432   000A3A                     l1440:
  1433                           
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 41, Range of values is 44 to 122
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte          124    63 (average)
  1439                           ;	Chosen strategy is simple_byte
  1440   000A3A  5065               	movf	??_MatchTone^0,w,c
  1441   000A3C  0A2C               	xorlw	44	; case 44
  1442   000A3E  B4D8               	btfsc	status,2,c
  1443   000A40  EF0D  F005         	goto	l111
  1444   000A44  0A6E               	xorlw	110	; case 66
  1445   000A46  B4D8               	btfsc	status,2,c
  1446   000A48  EFFB  F004         	goto	l106
  1447   000A4C  0A01               	xorlw	1	; case 67
  1448   000A4E  B4D8               	btfsc	status,2,c
  1449   000A50  EFEF  F004         	goto	l102
  1450   000A54  0A07               	xorlw	7	; case 68
  1451   000A56  B4D8               	btfsc	status,2,c
  1452   000A58  EFB9  F004         	goto	l84
  1453   000A5C  0A01               	xorlw	1	; case 69
  1454   000A5E  B4D8               	btfsc	status,2,c
  1455   000A60  EFA1  F004         	goto	l76
  1456   000A64  0A03               	xorlw	3	; case 70
  1457   000A66  B4D8               	btfsc	status,2,c
  1458   000A68  EFBF  F004         	goto	l86
  1459   000A6C  0A01               	xorlw	1	; case 71
  1460   000A6E  B4D8               	btfsc	status,2,c
  1461   000A70  EFC5  F004         	goto	l88
  1462   000A74  0A0F               	xorlw	15	; case 72
  1463   000A76  B4D8               	btfsc	status,2,c
  1464   000A78  EFCB  F004         	goto	l90
  1465   000A7C  0A02               	xorlw	2	; case 74
  1466   000A7E  B4D8               	btfsc	status,2,c
  1467   000A80  EFD1  F004         	goto	l92
  1468   000A84  0A01               	xorlw	1	; case 75
  1469   000A86  B4D8               	btfsc	status,2,c
  1470   000A88  EFD7  F004         	goto	l94
  1471   000A8C  0A07               	xorlw	7	; case 76
  1472   000A8E  B4D8               	btfsc	status,2,c
  1473   000A90  EFDD  F004         	goto	l96
  1474   000A94  0A01               	xorlw	1	; case 77
  1475   000A96  B4D8               	btfsc	status,2,c
  1476   000A98  EF07  F005         	goto	l110
  1477   000A9C  0A03               	xorlw	3	; case 78
  1478   000A9E  B4D8               	btfsc	status,2,c
  1479   000AA0  EF01  F005         	goto	l108
  1480   000AA4  0A1F               	xorlw	31	; case 81
  1481   000AA6  B4D8               	btfsc	status,2,c
  1482   000AA8  EF95  F004         	goto	l71
  1483   000AAC  0A03               	xorlw	3	; case 82
  1484   000AAE  B4D8               	btfsc	status,2,c
  1485   000AB0  EFA7  F004         	goto	l78
  1486   000AB4  0A06               	xorlw	6	; case 84
  1487   000AB6  B4D8               	btfsc	status,2,c
  1488   000AB8  EFAD  F004         	goto	l80
  1489   000ABC  0A02               	xorlw	2	; case 86
  1490   000ABE  B4D8               	btfsc	status,2,c
  1491   000AC0  EFF5  F004         	goto	l104
  1492   000AC4  0A01               	xorlw	1	; case 87
  1493   000AC6  B4D8               	btfsc	status,2,c
  1494   000AC8  EF9B  F004         	goto	l74
  1495   000ACC  0A0F               	xorlw	15	; case 88
  1496   000ACE  B4D8               	btfsc	status,2,c
  1497   000AD0  EFE9  F004         	goto	l100
  1498   000AD4  0A01               	xorlw	1	; case 89
  1499   000AD6  B4D8               	btfsc	status,2,c
  1500   000AD8  EFB3  F004         	goto	l82
  1501   000ADC  0A03               	xorlw	3	; case 90
  1502   000ADE  B4D8               	btfsc	status,2,c
  1503   000AE0  EFE3  F004         	goto	l98
  1504   000AE4  0A38               	xorlw	56	; case 98
  1505   000AE6  B4D8               	btfsc	status,2,c
  1506   000AE8  EFFB  F004         	goto	l106
  1507   000AEC  0A01               	xorlw	1	; case 99
  1508   000AEE  B4D8               	btfsc	status,2,c
  1509   000AF0  EFEF  F004         	goto	l102
  1510   000AF4  0A07               	xorlw	7	; case 100
  1511   000AF6  B4D8               	btfsc	status,2,c
  1512   000AF8  EFB9  F004         	goto	l84
  1513   000AFC  0A01               	xorlw	1	; case 101
  1514   000AFE  B4D8               	btfsc	status,2,c
  1515   000B00  EFA1  F004         	goto	l76
  1516   000B04  0A03               	xorlw	3	; case 102
  1517   000B06  B4D8               	btfsc	status,2,c
  1518   000B08  EFBF  F004         	goto	l86
  1519   000B0C  0A01               	xorlw	1	; case 103
  1520   000B0E  B4D8               	btfsc	status,2,c
  1521   000B10  EFC5  F004         	goto	l88
  1522   000B14  0A0F               	xorlw	15	; case 104
  1523   000B16  B4D8               	btfsc	status,2,c
  1524   000B18  EFCB  F004         	goto	l90
  1525   000B1C  0A02               	xorlw	2	; case 106
  1526   000B1E  B4D8               	btfsc	status,2,c
  1527   000B20  EFD1  F004         	goto	l92
  1528   000B24  0A01               	xorlw	1	; case 107
  1529   000B26  B4D8               	btfsc	status,2,c
  1530   000B28  EFD7  F004         	goto	l94
  1531   000B2C  0A07               	xorlw	7	; case 108
  1532   000B2E  B4D8               	btfsc	status,2,c
  1533   000B30  EFDD  F004         	goto	l96
  1534   000B34  0A01               	xorlw	1	; case 109
  1535   000B36  B4D8               	btfsc	status,2,c
  1536   000B38  EF07  F005         	goto	l110
  1537   000B3C  0A03               	xorlw	3	; case 110
  1538   000B3E  B4D8               	btfsc	status,2,c
  1539   000B40  EF01  F005         	goto	l108
  1540   000B44  0A1F               	xorlw	31	; case 113
  1541   000B46  B4D8               	btfsc	status,2,c
  1542   000B48  EF95  F004         	goto	l71
  1543   000B4C  0A03               	xorlw	3	; case 114
  1544   000B4E  B4D8               	btfsc	status,2,c
  1545   000B50  EFA7  F004         	goto	l78
  1546   000B54  0A06               	xorlw	6	; case 116
  1547   000B56  B4D8               	btfsc	status,2,c
  1548   000B58  EFAD  F004         	goto	l80
  1549   000B5C  0A02               	xorlw	2	; case 118
  1550   000B5E  B4D8               	btfsc	status,2,c
  1551   000B60  EFF5  F004         	goto	l104
  1552   000B64  0A01               	xorlw	1	; case 119
  1553   000B66  B4D8               	btfsc	status,2,c
  1554   000B68  EF9B  F004         	goto	l74
  1555   000B6C  0A0F               	xorlw	15	; case 120
  1556   000B6E  B4D8               	btfsc	status,2,c
  1557   000B70  EFE9  F004         	goto	l100
  1558   000B74  0A01               	xorlw	1	; case 121
  1559   000B76  B4D8               	btfsc	status,2,c
  1560   000B78  EFB3  F004         	goto	l82
  1561   000B7C  0A03               	xorlw	3	; case 122
  1562   000B7E  B4D8               	btfsc	status,2,c
  1563   000B80  EFE3  F004         	goto	l98
  1564   000B84  EFC4  F005         	goto	l1056
  1565   000B88                     l1056:
  1566                           
  1567                           ;main.c: 188:         ClearBuffer();
  1568   000B88  EC5F  F006         	call	_ClearBuffer	;wreg free
  1569   000B8C                     l112:
  1570   000B8C  0012               	return		;funcret
  1571   000B8E                     __end_of_MatchTone:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _ClearBuffer *****************
  1575 ;; Defined at:
  1576 ;;		line 59 in file "setting_hardaware/uart.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  i               2   11[COMRAM] int 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1590 ;;      Params:         0       0       0       0       0       0       0
  1591 ;;      Locals:         2       0       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0
  1593 ;;      Totals:         2       0       0       0       0       0       0
  1594 ;;Total ram usage:        2 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 4
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_MatchTone
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text8
  1605   000CBE                     __ptext8:
  1606                           	callstack 0
  1607   000CBE                     _ClearBuffer:
  1608                           	callstack 25
  1609   000CBE                     
  1610                           ;setting_hardaware/uart.c: 60:     for(int i = 0; i < 10 ; i++)
  1611   000CBE  0E00               	movlw	0
  1612   000CC0  6E64               	movwf	(ClearBuffer@i+1)^0,c
  1613   000CC2  0E00               	movlw	0
  1614   000CC4  6E63               	movwf	ClearBuffer@i^0,c
  1615   000CC6                     l940:
  1616                           
  1617                           ;setting_hardaware/uart.c: 61:         mystring[i] = '\0';
  1618   000CC6  5063               	movf	ClearBuffer@i^0,w,c
  1619   000CC8  0F06               	addlw	low _mystring
  1620   000CCA  6ED9               	movwf	fsr2l,c
  1621   000CCC  6ADA               	clrf	fsr2h,c
  1622   000CCE  6ADF               	clrf	indf2,c
  1623   000CD0  4A63               	infsnz	ClearBuffer@i^0,f,c
  1624   000CD2  2A64               	incf	(ClearBuffer@i+1)^0,f,c
  1625   000CD4  BE64               	btfsc	(ClearBuffer@i+1)^0,7,c
  1626   000CD6  EF76  F006         	goto	u11
  1627   000CDA  5064               	movf	(ClearBuffer@i+1)^0,w,c
  1628   000CDC  E109               	bnz	u10
  1629   000CDE  0E0A               	movlw	10
  1630   000CE0  5C63               	subwf	ClearBuffer@i^0,w,c
  1631   000CE2  A0D8               	btfss	status,0,c
  1632   000CE4  EF76  F006         	goto	u11
  1633   000CE8  EF78  F006         	goto	u10
  1634   000CEC                     u11:
  1635   000CEC  EF63  F006         	goto	l940
  1636   000CF0                     u10:
  1637   000CF0                     
  1638                           ;setting_hardaware/uart.c: 62:     lenStr = 0;
  1639   000CF0  0E00               	movlw	0
  1640   000CF2  6E02               	movwf	(_lenStr+1)^0,c
  1641   000CF4  0E00               	movlw	0
  1642   000CF6  6E01               	movwf	_lenStr^0,c
  1643   000CF8  0012               	return		;funcret
  1644   000CFA                     __end_of_ClearBuffer:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _GetString *****************
  1648 ;; Defined at:
  1649 ;;		line 75 in file "setting_hardaware/uart.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      PTR unsigned char 
  1656 ;; Registers used:
  1657 ;;		wreg
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1663 ;;      Params:         2       0       0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0
  1666 ;;      Totals:         2       0       0       0       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 4
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text9
  1678   000E60                     __ptext9:
  1679                           	callstack 0
  1680   000E60                     _GetString:
  1681                           	callstack 26
  1682   000E60                     
  1683                           ;setting_hardaware/uart.c: 76:     return mystring;
  1684   000E60  0E06               	movlw	_mystring& (0+255)
  1685   000E62  0012               	return		;funcret
  1686   000E64                     __end_of_GetString:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _Lo_ISR *****************
  1690 ;; Defined at:
  1691 ;;		line 81 in file "setting_hardaware/uart.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1705 ;;      Params:         0       0       0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0
  1707 ;;      Temps:          5       0       0       0       0       0       0
  1708 ;;      Totals:         5       0       0       0       0       0       0
  1709 ;;Total ram usage:        5 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 3
  1712 ;; This function calls:
  1713 ;;		_MyusartRead
  1714 ;; This function is called by:
  1715 ;;		Interrupt level 1
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	intcodelo
  1720   000018                     __pintcodelo:
  1721                           	callstack 0
  1722   000018                     _Lo_ISR:
  1723                           	callstack 25
  1724                           
  1725                           ;incstack = 0
  1726   000018  806A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1727   00001A  CFD8 F05E          	movff	status,??_Lo_ISR
  1728   00001E  CFE8 F05F          	movff	wreg,??_Lo_ISR+1
  1729   000022  CFE0 F060          	movff	bsr,??_Lo_ISR+2
  1730   000026  CFD9 F061          	movff	fsr2l,??_Lo_ISR+3
  1731   00002A  CFDA F062          	movff	fsr2h,??_Lo_ISR+4
  1732   00002E                     
  1733                           ;setting_hardaware/uart.c: 83:     if(RCIF)
  1734   00002E  AA9E               	btfss	3998,5,c	;volatile
  1735   000030  EF1C  F000         	goto	i1u113_21
  1736   000034  EF1E  F000         	goto	i1u113_20
  1737   000038                     i1u113_21:
  1738   000038  EF2A  F000         	goto	i1l252
  1739   00003C                     i1u113_20:
  1740   00003C                     
  1741                           ;setting_hardaware/uart.c: 84:     {;setting_hardaware/uart.c: 85:         if(RCSTAbits.
      +                          OERR)
  1742   00003C  A2AB               	btfss	171,1,c	;volatile
  1743   00003E  EF23  F000         	goto	i1u114_21
  1744   000042  EF25  F000         	goto	i1u114_20
  1745   000046                     i1u114_21:
  1746   000046  EF28  F000         	goto	i1l1432
  1747   00004A                     i1u114_20:
  1748   00004A                     
  1749                           ;setting_hardaware/uart.c: 86:         {;setting_hardaware/uart.c: 87:             CREN 
      +                          = 0;
  1750   00004A  98AB               	bcf	4011,4,c	;volatile
  1751                           
  1752                           ;setting_hardaware/uart.c: 88:             __nop();
  1753   00004C  0000               	nop	
  1754                           
  1755                           ;setting_hardaware/uart.c: 89:             CREN = 1;
  1756   00004E  88AB               	bsf	4011,4,c	;volatile
  1757   000050                     i1l1432:
  1758                           
  1759                           ;setting_hardaware/uart.c: 92:         MyusartRead();
  1760   000050  EC7D  F006         	call	_MyusartRead	;wreg free
  1761   000054                     i1l252:
  1762   000054  C062  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1763   000058  C061  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1764   00005C  C060  FFE0         	movff	??_Lo_ISR+2,bsr
  1765   000060  C05F  FFE8         	movff	??_Lo_ISR+1,wreg
  1766   000064  C05E  FFD8         	movff	??_Lo_ISR,status
  1767   000068  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1768   00006A  0010               	retfie	
  1769   00006C                     __end_of_Lo_ISR:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _MyusartRead *****************
  1773 ;; Defined at:
  1774 ;;		line 65 in file "setting_hardaware/uart.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1788 ;;      Params:         0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 2
  1795 ;; This function calls:
  1796 ;;		_UART_Write
  1797 ;;		___awmod
  1798 ;; This function is called by:
  1799 ;;		_Lo_ISR
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text11
  1804   000CFA                     __ptext11:
  1805                           	callstack 0
  1806   000CFA                     _MyusartRead:
  1807                           	callstack 25
  1808   000CFA                     
  1809                           ;setting_hardaware/uart.c: 68:     mystring[lenStr] = RCREG;
  1810   000CFA  5001               	movf	_lenStr^0,w,c
  1811   000CFC  0F06               	addlw	low _mystring
  1812   000CFE  6ED9               	movwf	fsr2l,c
  1813   000D00  6ADA               	clrf	fsr2h,c
  1814   000D02  CFAE FFDF          	movff	4014,indf2	;volatile
  1815   000D06                     
  1816                           ;setting_hardaware/uart.c: 69:     UART_Write(mystring[lenStr]);
  1817   000D06  5001               	movf	_lenStr^0,w,c
  1818   000D08  0F06               	addlw	low _mystring
  1819   000D0A  6ED9               	movwf	fsr2l,c
  1820   000D0C  6ADA               	clrf	fsr2h,c
  1821   000D0E  50DF               	movf	indf2,w,c
  1822   000D10  ECB8  F006         	call	_UART_Write
  1823   000D14                     
  1824                           ;setting_hardaware/uart.c: 70:     lenStr++;
  1825   000D14  4A01               	infsnz	_lenStr^0,f,c
  1826   000D16  2A02               	incf	(_lenStr+1)^0,f,c
  1827   000D18                     
  1828                           ;setting_hardaware/uart.c: 71:     lenStr %= 10;
  1829   000D18  C001  F058         	movff	_lenStr,___awmod@dividend
  1830   000D1C  C002  F059         	movff	_lenStr+1,___awmod@dividend+1
  1831   000D20  0E00               	movlw	0
  1832   000D22  6E5B               	movwf	(___awmod@divisor+1)^0,c
  1833   000D24  0E0A               	movlw	10
  1834   000D26  6E5A               	movwf	___awmod@divisor^0,c
  1835   000D28  ECC7  F005         	call	___awmod	;wreg free
  1836   000D2C  C058  F001         	movff	?___awmod,_lenStr
  1837   000D30  C059  F002         	movff	?___awmod+1,_lenStr+1
  1838   000D34  0012               	return		;funcret
  1839   000D36                     __end_of_MyusartRead:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function ___awmod *****************
  1843 ;; Defined at:
  1844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  dividend        2    0[COMRAM] int 
  1847 ;;  divisor         2    2[COMRAM] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  sign            1    5[COMRAM] unsigned char 
  1850 ;;  counter         1    4[COMRAM] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    0[COMRAM] int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1860 ;;      Params:         4       0       0       0       0       0       0
  1861 ;;      Locals:         2       0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0
  1863 ;;      Totals:         6       0       0       0       0       0       0
  1864 ;;Total ram usage:        6 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_MyusartRead
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text12
  1875   000B8E                     __ptext12:
  1876                           	callstack 0
  1877   000B8E                     ___awmod:
  1878                           	callstack 25
  1879   000B8E  0E00               	movlw	0
  1880   000B90  6E5D               	movwf	___awmod@sign^0,c
  1881   000B92  BE59               	btfsc	(___awmod@dividend+1)^0,7,c
  1882   000B94  EFD0  F005         	goto	i1u62_20
  1883   000B98  EFCE  F005         	goto	i1u62_21
  1884   000B9C                     i1u62_21:
  1885   000B9C  EFD6  F005         	goto	i1l1254
  1886   000BA0                     i1u62_20:
  1887   000BA0  6C58               	negf	___awmod@dividend^0,c
  1888   000BA2  1E59               	comf	(___awmod@dividend+1)^0,f,c
  1889   000BA4  B0D8               	btfsc	status,0,c
  1890   000BA6  2A59               	incf	(___awmod@dividend+1)^0,f,c
  1891   000BA8  0E01               	movlw	1
  1892   000BAA  6E5D               	movwf	___awmod@sign^0,c
  1893   000BAC                     i1l1254:
  1894   000BAC  BE5B               	btfsc	(___awmod@divisor+1)^0,7,c
  1895   000BAE  EFDD  F005         	goto	i1u63_20
  1896   000BB2  EFDB  F005         	goto	i1u63_21
  1897   000BB6                     i1u63_21:
  1898   000BB6  EFE1  F005         	goto	i1l1258
  1899   000BBA                     i1u63_20:
  1900   000BBA  6C5A               	negf	___awmod@divisor^0,c
  1901   000BBC  1E5B               	comf	(___awmod@divisor+1)^0,f,c
  1902   000BBE  B0D8               	btfsc	status,0,c
  1903   000BC0  2A5B               	incf	(___awmod@divisor+1)^0,f,c
  1904   000BC2                     i1l1258:
  1905   000BC2  505A               	movf	___awmod@divisor^0,w,c
  1906   000BC4  105B               	iorwf	(___awmod@divisor+1)^0,w,c
  1907   000BC6  B4D8               	btfsc	status,2,c
  1908   000BC8  EFE8  F005         	goto	i1u64_21
  1909   000BCC  EFEA  F005         	goto	i1u64_20
  1910   000BD0                     i1u64_21:
  1911   000BD0  EF0E  F006         	goto	i1l1274
  1912   000BD4                     i1u64_20:
  1913   000BD4  0E01               	movlw	1
  1914   000BD6  6E5C               	movwf	___awmod@counter^0,c
  1915   000BD8  EFF2  F005         	goto	i1l1264
  1916   000BDC                     i1l1262:
  1917   000BDC  90D8               	bcf	status,0,c
  1918   000BDE  365A               	rlcf	___awmod@divisor^0,f,c
  1919   000BE0  365B               	rlcf	(___awmod@divisor+1)^0,f,c
  1920   000BE2  2A5C               	incf	___awmod@counter^0,f,c
  1921   000BE4                     i1l1264:
  1922   000BE4  AE5B               	btfss	(___awmod@divisor+1)^0,7,c
  1923   000BE6  EFF7  F005         	goto	i1u65_21
  1924   000BEA  EFF9  F005         	goto	i1u65_20
  1925   000BEE                     i1u65_21:
  1926   000BEE  EFEE  F005         	goto	i1l1262
  1927   000BF2                     i1u65_20:
  1928   000BF2                     i1l1266:
  1929   000BF2  505A               	movf	___awmod@divisor^0,w,c
  1930   000BF4  5C58               	subwf	___awmod@dividend^0,w,c
  1931   000BF6  505B               	movf	(___awmod@divisor+1)^0,w,c
  1932   000BF8  5859               	subwfb	(___awmod@dividend+1)^0,w,c
  1933   000BFA  A0D8               	btfss	status,0,c
  1934   000BFC  EF02  F006         	goto	i1u66_21
  1935   000C00  EF04  F006         	goto	i1u66_20
  1936   000C04                     i1u66_21:
  1937   000C04  EF08  F006         	goto	i1l1270
  1938   000C08                     i1u66_20:
  1939   000C08  505A               	movf	___awmod@divisor^0,w,c
  1940   000C0A  5E58               	subwf	___awmod@dividend^0,f,c
  1941   000C0C  505B               	movf	(___awmod@divisor+1)^0,w,c
  1942   000C0E  5A59               	subwfb	(___awmod@dividend+1)^0,f,c
  1943   000C10                     i1l1270:
  1944   000C10  90D8               	bcf	status,0,c
  1945   000C12  325B               	rrcf	(___awmod@divisor+1)^0,f,c
  1946   000C14  325A               	rrcf	___awmod@divisor^0,f,c
  1947   000C16  2E5C               	decfsz	___awmod@counter^0,f,c
  1948   000C18  EFF9  F005         	goto	i1l1266
  1949   000C1C                     i1l1274:
  1950   000C1C  505D               	movf	___awmod@sign^0,w,c
  1951   000C1E  B4D8               	btfsc	status,2,c
  1952   000C20  EF14  F006         	goto	i1u67_21
  1953   000C24  EF16  F006         	goto	i1u67_20
  1954   000C28                     i1u67_21:
  1955   000C28  EF1A  F006         	goto	i1l1278
  1956   000C2C                     i1u67_20:
  1957   000C2C  6C58               	negf	___awmod@dividend^0,c
  1958   000C2E  1E59               	comf	(___awmod@dividend+1)^0,f,c
  1959   000C30  B0D8               	btfsc	status,0,c
  1960   000C32  2A59               	incf	(___awmod@dividend+1)^0,f,c
  1961   000C34                     i1l1278:
  1962   000C34  C058  F058         	movff	___awmod@dividend,?___awmod
  1963   000C38  C059  F059         	movff	___awmod@dividend+1,?___awmod+1
  1964   000C3C  0012               	return		;funcret
  1965   000C3E                     __end_of___awmod:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _UART_Write *****************
  1969 ;; Defined at:
  1970 ;;		line 41 in file "setting_hardaware/uart.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  data            1    wreg     unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  data            1    0[COMRAM] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1984 ;;      Params:         0       0       0       0       0       0       0
  1985 ;;      Locals:         1       0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0
  1987 ;;      Totals:         1       0       0       0       0       0       0
  1988 ;;Total ram usage:        1 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_MyusartRead
  1995 ;;		_UART_Write_Text
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text13
  2000   000D70                     __ptext13:
  2001                           	callstack 0
  2002   000D70                     _UART_Write:
  2003                           	callstack 25
  2004                           
  2005                           ;incstack = 0
  2006                           ;UART_Write@data stored from wreg
  2007   000D70  6E58               	movwf	UART_Write@data^0,c
  2008   000D72                     i1l221:
  2009   000D72  A2AC               	btfss	172,1,c	;volatile
  2010   000D74  EFBE  F006         	goto	i1u2_21
  2011   000D78  EFC0  F006         	goto	i1u2_20
  2012   000D7C                     i1u2_21:
  2013   000D7C  EFB9  F006         	goto	i1l221
  2014   000D80                     i1u2_20:
  2015   000D80                     
  2016                           ;setting_hardaware/uart.c: 44:     TXREG = data;
  2017   000D80  C058  FFAD         	movff	UART_Write@data,4013	;volatile
  2018   000D84                     
  2019                           ;setting_hardaware/uart.c: 45:     if(data == '\r'){
  2020   000D84  0E0D               	movlw	13
  2021   000D86  1858               	xorwf	UART_Write@data^0,w,c
  2022   000D88  A4D8               	btfss	status,2,c
  2023   000D8A  EFC9  F006         	goto	i1u3_21
  2024   000D8E  EFCB  F006         	goto	i1u3_20
  2025   000D92                     i1u3_21:
  2026   000D92  EFD4  F006         	goto	i1l228
  2027   000D96                     i1u3_20:
  2028   000D96                     i1l225:
  2029   000D96  A2AC               	btfss	172,1,c	;volatile
  2030   000D98  EFD0  F006         	goto	i1u4_21
  2031   000D9C  EFD2  F006         	goto	i1u4_20
  2032   000DA0                     i1u4_21:
  2033   000DA0  EFCB  F006         	goto	i1l225
  2034   000DA4                     i1u4_20:
  2035   000DA4                     
  2036                           ;setting_hardaware/uart.c: 47:         TXREG = '\n';
  2037   000DA4  0E0A               	movlw	10
  2038   000DA6  6EAD               	movwf	173,c	;volatile
  2039   000DA8                     i1l228:
  2040   000DA8  0012               	return		;funcret
  2041   000DAA                     __end_of_UART_Write:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _Hi_ISR *****************
  2045 ;; Defined at:
  2046 ;;		line 21 in file "main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         0       0       0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		Interrupt level 2
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	intcode
  2074   000008                     __pintcode:
  2075                           	callstack 0
  2076   000008                     _Hi_ISR:
  2077                           	callstack 25
  2078                           
  2079                           ;incstack = 0
  2080   000008  826A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2081   00000A  ED2D  F007         	call	int_func,f	;refresh shadow registers
  2082                           
  2083                           	psect	intcode_body
  2084   000E5A                     __pintcode_body:
  2085                           	callstack 25
  2086   000E5A                     int_func:
  2087                           	callstack 25
  2088   000E5A  0006               	pop		; remove dummy address from shadow register refresh
  2089   000E5C  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2090   000E5E  0011               	retfie		f
  2091   000E60                     __end_of_Hi_ISR:
  2092                           	callstack 0
  2093                           
  2094                           	psect	smallconst
  2095   000600                     __psmallconst:
  2096                           	callstack 0
  2097   000600  00                 	db	0
  2098   000601  00                 	db	0	; dummy byte at the end
  2099   000000                     
  2100                           	psect	rparam
  2101   000000                     
  2102                           	psect	temp
  2103   00006A                     btemp:
  2104                           	callstack 0
  2105   00006A                     	ds	1
  2106   000000                     int$flags	set	btemp
  2107   000000                     wtemp8	set	btemp+1
  2108   000000                     ttemp5	set	btemp+1
  2109   000000                     ttemp6	set	btemp+4
  2110   000000                     ttemp7	set	btemp+8
  2111                           
  2112                           	psect	idloc
  2113                           
  2114                           ;Config register IDLOC0 @ 0x200000
  2115                           ;	unspecified, using default values
  2116   200000                     	org	2097152
  2117   200000  FF                 	db	255
  2118                           
  2119                           ;Config register IDLOC1 @ 0x200001
  2120                           ;	unspecified, using default values
  2121   200001                     	org	2097153
  2122   200001  FF                 	db	255
  2123                           
  2124                           ;Config register IDLOC2 @ 0x200002
  2125                           ;	unspecified, using default values
  2126   200002                     	org	2097154
  2127   200002  FF                 	db	255
  2128                           
  2129                           ;Config register IDLOC3 @ 0x200003
  2130                           ;	unspecified, using default values
  2131   200003                     	org	2097155
  2132   200003  FF                 	db	255
  2133                           
  2134                           ;Config register IDLOC4 @ 0x200004
  2135                           ;	unspecified, using default values
  2136   200004                     	org	2097156
  2137   200004  FF                 	db	255
  2138                           
  2139                           ;Config register IDLOC5 @ 0x200005
  2140                           ;	unspecified, using default values
  2141   200005                     	org	2097157
  2142   200005  FF                 	db	255
  2143                           
  2144                           ;Config register IDLOC6 @ 0x200006
  2145                           ;	unspecified, using default values
  2146   200006                     	org	2097158
  2147   200006  FF                 	db	255
  2148                           
  2149                           ;Config register IDLOC7 @ 0x200007
  2150                           ;	unspecified, using default values
  2151   200007                     	org	2097159
  2152   200007  FF                 	db	255
  2153                           
  2154                           	psect	config
  2155                           
  2156                           ; Padding undefined space
  2157   300000                     	org	3145728
  2158   300000  FF                 	db	255
  2159                           
  2160                           ;Config register CONFIG1H @ 0x300001
  2161                           ;	Oscillator Selection bits
  2162                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2163                           ;	Fail-Safe Clock Monitor Enable bit
  2164                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2165                           ;	Internal/External Oscillator Switchover bit
  2166                           ;	IESO = ON, Oscillator Switchover mode enabled
  2167   300001                     	org	3145729
  2168   300001  88                 	db	136
  2169                           
  2170                           ;Config register CONFIG2L @ 0x300002
  2171                           ;	Power-up Timer Enable bit
  2172                           ;	PWRT = OFF, PWRT disabled
  2173                           ;	Brown-out Reset Enable bits
  2174                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2175                           ;	Brown Out Reset Voltage bits
  2176                           ;	BORV = 3, Minimum setting
  2177   300002                     	org	3145730
  2178   300002  1F                 	db	31
  2179                           
  2180                           ;Config register CONFIG2H @ 0x300003
  2181                           ;	Watchdog Timer Enable bit
  2182                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2183                           ;	Watchdog Timer Postscale Select bits
  2184                           ;	WDTPS = 1, 1:1
  2185   300003                     	org	3145731
  2186   300003  00                 	db	0
  2187                           
  2188                           ; Padding undefined space
  2189   300004                     	org	3145732
  2190   300004  FF                 	db	255
  2191                           
  2192                           ;Config register CONFIG3H @ 0x300005
  2193                           ;	CCP2 MUX bit
  2194                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2195                           ;	PORTB A/D Enable bit
  2196                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2197                           ;	Low-Power Timer1 Oscillator Enable bit
  2198                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2199                           ;	MCLR Pin Enable bit
  2200                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2201   300005                     	org	3145733
  2202   300005  83                 	db	131
  2203                           
  2204                           ;Config register CONFIG4L @ 0x300006
  2205                           ;	Stack Full/Underflow Reset Enable bit
  2206                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2207                           ;	Single-Supply ICSP Enable bit
  2208                           ;	LVP = OFF, Single-Supply ICSP disabled
  2209                           ;	Extended Instruction Set Enable bit
  2210                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2211                           ;	Background Debugger Enable bit
  2212                           ;	DEBUG = 0x1, unprogrammed default
  2213   300006                     	org	3145734
  2214   300006  81                 	db	129
  2215                           
  2216                           ; Padding undefined space
  2217   300007                     	org	3145735
  2218   300007  FF                 	db	255
  2219                           
  2220                           ;Config register CONFIG5L @ 0x300008
  2221                           ;	Code Protection bit
  2222                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2223                           ;	Code Protection bit
  2224                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2225                           ;	Code Protection bit
  2226                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2227                           ;	Code Protection bit
  2228                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2229   300008                     	org	3145736
  2230   300008  0F                 	db	15
  2231                           
  2232                           ;Config register CONFIG5H @ 0x300009
  2233                           ;	Boot Block Code Protection bit
  2234                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2235                           ;	Data EEPROM Code Protection bit
  2236                           ;	CPD = OFF, Data EEPROM not code-protected
  2237   300009                     	org	3145737
  2238   300009  C0                 	db	192
  2239                           
  2240                           ;Config register CONFIG6L @ 0x30000A
  2241                           ;	Write Protection bit
  2242                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2243                           ;	Write Protection bit
  2244                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2245                           ;	Write Protection bit
  2246                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2247                           ;	Write Protection bit
  2248                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2249   30000A                     	org	3145738
  2250   30000A  0F                 	db	15
  2251                           
  2252                           ;Config register CONFIG6H @ 0x30000B
  2253                           ;	Configuration Register Write Protection bit
  2254                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2255                           ;	Boot Block Write Protection bit
  2256                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2257                           ;	Data EEPROM Write Protection bit
  2258                           ;	WRTD = OFF, Data EEPROM not write-protected
  2259   30000B                     	org	3145739
  2260   30000B  E0                 	db	224
  2261                           
  2262                           ;Config register CONFIG7L @ 0x30000C
  2263                           ;	Table Read Protection bit
  2264                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2265                           ;	Table Read Protection bit
  2266                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2267                           ;	Table Read Protection bit
  2268                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2269                           ;	Table Read Protection bit
  2270                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2271   30000C                     	org	3145740
  2272   30000C  0F                 	db	15
  2273                           
  2274                           ;Config register CONFIG7H @ 0x30000D
  2275                           ;	Boot Block Table Read Protection bit
  2276                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2277   30000D                     	org	3145741
  2278   30000D  40                 	db	64
  2279                           tosu	equ	0xFFF
  2280                           tosh	equ	0xFFE
  2281                           tosl	equ	0xFFD
  2282                           stkptr	equ	0xFFC
  2283                           pclatu	equ	0xFFB
  2284                           pclath	equ	0xFFA
  2285                           pcl	equ	0xFF9
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           indf0	equ	0xFEF
  2293                           postinc0	equ	0xFEE
  2294                           postdec0	equ	0xFED
  2295                           preinc0	equ	0xFEC
  2296                           plusw0	equ	0xFEB
  2297                           fsr0h	equ	0xFEA
  2298                           fsr0l	equ	0xFE9
  2299                           wreg	equ	0xFE8
  2300                           indf1	equ	0xFE7
  2301                           postinc1	equ	0xFE6
  2302                           postdec1	equ	0xFE5
  2303                           preinc1	equ	0xFE4
  2304                           plusw1	equ	0xFE3
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           bsr	equ	0xFE0
  2308                           indf2	equ	0xFDF
  2309                           postinc2	equ	0xFDE
  2310                           postdec2	equ	0xFDD
  2311                           preinc2	equ	0xFDC
  2312                           plusw2	equ	0xFDB
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        42
    BSS         45
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16     105
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString
    _MatchTone->_ClearBuffer

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1172
                          _GetString
                          _MatchTone
                  _SYSTEM_Initialize
                          _ValidTone
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                             13 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _ValidTone                                            3     1      2     902
                                             11 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatchTone                                            2     2      0      45
                                             13 COMRAM     2     2      0
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      45
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     478
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0     478
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _MatchTone
     _ClearBuffer
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _ValidTone
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      69       1       83.3%
BITBIGSFRhhhlhh     1E      0       0      17        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhhhll       B      0       0      19        0.0%
BITBIGSFRllhl        B      0       0      23        0.0%
BITBIGSFRlllll       A      0       0      26        0.0%
BITBIGSFRlllhh       8      0       0      24        0.0%
BITBIGSFRllllh       6      0       0      25        0.0%
BITBIGSFRlhh         4      0       0      20        0.0%
BITBIGSFRlhl         4      0       0      21        0.0%
BITBIGSFRhhhlhl      2      0       0      18        0.0%
BITBIGSFRllhhh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      27        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 09 23:27:13 2024

                           l52 0CA6                             l54 0CB4                             l71 092A  
                           l63 08FA                             l80 095A                             l90 0996  
                           l82 0966                             l74 0936                             l92 09A2  
                           l84 0972                             l76 0942                             l94 09AE  
                           l86 097E                             l78 094E                             l96 09BA  
                           l88 098A                             l98 09C6                             u10 0CF0  
                           u11 0CEC                    _tone_list_H 0043                    _tone_list_L 002E  
                           bsr 0FE0                            l100 09D2                            l110 0A0E  
                          l102 09DE                            l111 0A1A                            l104 09EA  
                          l112 0B8C                            l106 09F6                            l108 0A02  
                          l153 0E50                            l218 0E44                            l245 0E62  
                          l182 0E22                            l239 0CF8                            l185 0E58  
                          l940 0CC6                            l932 0DFC                            l942 0CD0  
                          l934 0CBE                            l950 0E52                            l944 0CD4  
                          l960 0E36                            l952 0E24                            l946 0CF0  
                          l970 0E40                            l962 0E38                            l954 0E2E  
                          l948 0E46                            l972 0E42                            l964 0E3A  
                          l956 0E32                            l966 0E3C                            l958 0E34  
                          l968 0E3E                            u120 090C                            u121 0908  
                          u130 0922                            u131 091E                            u700 0628  
                          u701 0624                            u710 063A                            u711 0636  
                          u800 06DC                            u720 064C                            u801 06D8  
                          u721 0648                            u810 06EE                            u730 065E  
                          u811 06EA                            u731 065A                            u900 0790  
                          u820 0700                            u740 0670                            u901 078C  
                          u821 06FC                            u741 066C                            u910 07A2  
                          u830 0712                            u750 0682                            u911 079E  
                          u831 070E                            u751 067E                            u920 07B4  
                          u840 0724                            u760 0694                            u680 0DFC  
                          u921 07B0                            u841 0720                            u761 0690  
                          u681 0DF8                            u930 07C6                            u850 0736  
                          u770 06A6                            u690 0616                            u931 07C2  
                          u851 0732                            u771 06A2                            u691 0612  
                          u940 07D8                            u860 0748                            u780 06B8  
                          u941 07D4                            u861 0744                            u781 06B4  
                          u950 07EA                            u870 075A                            u790 06CA  
                          u951 07E6                            u871 0756                            u791 06C6  
                          u960 07FC                            u880 076C                            u961 07F8  
                          u881 0768                            u970 080E                            u890 077E  
                          u971 080A                            u891 077A                            u980 0820  
                          u981 081C                            u990 0832                            u991 082E  
                          _str 001A                   ___awmod@sign 005D                            wreg 0FE8  
                         l1020 0DFE                           l1030 0E16                           l1022 0E02  
                         l1032 0E1A                           l1024 0E08                           l1050 0922  
                         l1034 0E1E                           l1026 0E0E                           l1044 08FC  
                         l1028 0E10                           l1300 065E                           l1054 0A26  
                         l1046 090C                           l1310 06B8                           l1302 0670  
                         l1056 0B88                           l1048 0910                           l1320 0712  
                         l1312 06CA                           l1304 0682                           l1400 0C4E  
                         l1330 076C                           l1322 0724                           l1314 06DC  
                         l1306 0694                           l1410 0C6C                           l1402 0C52  
                         l1340 07C6                           l1332 077E                           l1324 0736  
                         l1316 06EE                           l1308 06A6                           l1420 0C8A  
                         l1412 0C70                           l1404 0C56                           l1350 0820  
                         l1342 07D8                           l1334 0790                           l1326 0748  
                         l1318 0700                           l1422 0CA2                           l1414 0C74  
                         l1406 0C64                           l1440 0A3A                           l1360 087A  
                         l1352 0832                           l1344 07EA                           l1336 07A2  
                         l1328 075A                           l1424 0CA4                           l1416 0C78  
                         l1408 0C68                           l1282 0E60                           l1370 08D4  
                         l1362 088C                           l1354 0844                           l1346 07FC  
                         l1338 07B4                           l1290 0604                           l1418 0C7A  
                         l1364 089E                           l1356 0856                           l1348 080E  
                         l1292 0616                           l1372 08E6                           l1366 08B0  
                         l1358 0868                           l1294 0628                           l1286 0DD4  
                         l1368 08C2                           l1296 063A                           l1288 0DD8  
                         l1392 0C3E                           l1378 08F2                           l1298 064C  
                         l1394 0C42                           l1396 0C46                           l1398 0C4A  
                         _ADFM 7E07                           u1000 0844                           _CREN 7D5C  
                         u1001 0840                           u1010 0856                           u1011 0852  
                         u1020 0868                           u1100 0C8A                           u1021 0864  
                         u1101 0C86                           u1030 087A                           u1110 0CA2  
                         u1031 0876                           u1111 0C9E                           u1040 088C  
                         u1120 0CB4                           u1041 0888                           u1121 0CB0  
                         u1050 089E                           u1051 089A                           u1060 08B0  
                         u1061 08AC                           u1070 08C2                           u1071 08BE  
                         u1080 08D4                           u1081 08D0                           u1090 08E6  
                         u1091 08E2                           _LATB 0F8A                           _RCIF 7CF5  
                         i2l45 0E5C                           _main 0C3E                           fsr1h 0FE2  
                         fsr2h 0FDA                           _tone 0005                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 006A                           start 006C                   ___param_bank 0000  
             ?_UART_Initialize 0058  __end_of_OSCILLATOR_Initialize 0E5A                          ?_main 0058  
              __end_of___awmod 0C3E                          _T3CON 0FB1                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l221 0D72  
                        i1l225 0D96                          i1l242 0D34                          i1l228 0DA8  
                        i1l252 0054                          i1l499 0C3C                          i1l982 0DA4  
                        i1l974 0D72                          i1l976 0D80                          i1l978 0D84  
                        _RCREG 0FAE                          _TMR3H 0FB3                          _TMR3L 0FB2  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TXREG 0FAD  
                  ?_UART_Write 0058                    _ClearBuffer 0CBE                          tablat 0FF5  
                        ttemp5 006B                          ttemp6 006E                          ttemp7 0072  
                        status 0FD8                          wtemp8 006B                __initialization 0D36  
                 __end_of_main 0CBE                         ??_main 0068                  __activetblptr 0002  
                       _ADCON1 0FC1                         _CCP1_H 0069                         _CCP1_L 0068  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _CCPR1H 0FBF  
                       _CCPR1L 0FBE                         i1l1250 0BA0                         i1l1260 0BD4  
                       i1l1252 0BA8                         i1l1270 0C10                         i1l1262 0BDC  
                       i1l1254 0BAC                         i1l1246 0B8E                         i1l1430 004A  
                       i1l1272 0C16                         i1l1264 0BE4                         i1l1256 0BBA  
                       i1l1248 0B92                         i1l1432 0050                         i1l1266 0BF2  
                       i1l1274 0C1C                         i1l1258 0BC2                         i1l1426 002E  
                       i1l1276 0C2C                         i1l1268 0C08                         i1l1428 003C  
                       i1l1278 0C34                         i1l1382 0CFA                         i1l1384 0D06  
                       i1l1386 0D14                         i1l1388 0D18                         i2l1164 0E5C  
                       i1u2_20 0D80                         i1u2_21 0D7C                         i1u3_20 0D96  
                       i1u3_21 0D92                         i1u4_20 0DA4                         i1u4_21 0DA0  
                       _Hi_ISR 0008                         _Lo_ISR 0018                      ??___awmod 005C  
                       _lenStr 0001                         clear_0 0D5C                ___awmod@divisor 005A  
                       isa$std 0001                ___awmod@counter 005C                         _strcpy 0DD4  
                 __pdataCOMRAM 002E                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8              _SYSTEM_Initialize 0DFE  
                   __accesstop 0080        __end_of__initialization 0D62             ?_SYSTEM_Initialize 0058  
                ___rparam_used 0001              __end_of_GetString 0E64                 __pcstackCOMRAM 0058  
          ??_SYSTEM_Initialize 0063              __end_of_MatchTone 0B8E                  ??_MyusartRead 005E  
                ValidTone@tone 0065      __end_of_SYSTEM_Initialize 0E24              __end_of_ValidTone 08FC  
                   __pnvCOMRAM 0068                        ?_Hi_ISR 0058                        ?_Lo_ISR 0058  
                      _CCP1CON 0FBD                        ?_strcpy 0065                   ??_UART_Write 0058  
                      i1u62_20 0BA0                        i1u62_21 0B9C                        i1u63_20 0BBA  
                      i1u63_21 0BB6                        i1u64_20 0BD4                        i1u64_21 0BD0  
                      i1u65_20 0BF2                        i1u65_21 0BEE                        i1u66_20 0C08  
                      i1u66_21 0C04                        i1u67_20 0C2C                        i1u67_21 0C28  
                 ?_ClearBuffer 0058            __end_of_MyusartRead 0D36                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 0B8E             __end_of_UART_Write 0DAA  
                 __psmallconst 0600                        __pcinit 0D36                        __ramtop 0600  
                      __ptext0 0C3E                        __ptext1 0DD4                        __ptext2 0602  
                      __ptext3 0DFE                        __ptext4 0E24                        __ptext5 0E52  
                      __ptext6 0E46                        __ptext7 08FC                        __ptext8 0CBE  
                      __ptext9 0E60          _OSCILLATOR_Initialize 0E52                      _T3CONbits 0FB1  
             ___awmod@dividend 0058                 __pintcode_body 0E5A           end_of_initialization 0D62  
                __Lmediumconst 0000                        int_func 0E5A                      _RCSTAbits 0FAB  
                      postdec1 0FE5                        postinc0 0FEE                        strcpy@d 0067  
               UART_Write@data 0058                      _TRISBbits 0F93                      _TRISCbits 0F94  
                  _MyusartRead 0CFA                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 0E60  
               __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 0E52                      _GetString 0E60  
                  _BAUDCONbits 0FB8                  __pidataCOMRAM 0DAA         ?_OSCILLATOR_Initialize 0058  
               __end_of_strcpy 0DFE            start_initialization 0D36                      _MatchTone 08FC  
                 ClearBuffer@i 0063              ??_UART_Initialize 0063                       ??_Hi_ISR 0058  
                     ??_Lo_ISR 005E                      _ValidTone 0602                     ?_GetString 0063  
                     ??_strcpy 0067                    __pbssCOMRAM 0001                     ?_MatchTone 0058  
                   ?_ValidTone 0063                      __pintcode 0008                       ?___awmod 0058  
                  __pintcodelo 0018                    __smallconst 0600                      _curr_char 0004  
         _INTERRUPT_Initialize 0E46                       _LATCbits 0F8B                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       i1u113_20 003C                       i1u113_21 0038  
                     i1u114_20 004A                       i1u114_21 0046                       _PIR1bits 0F9E  
                     _RCONbits 0FD0                    ??_GetString 0065                     _ADCON0bits 0FC2  
                   _ADCON2bits 0FC0                      _tone_time 0003                    ??_MatchTone 0065  
                 ?_MyusartRead 0058                      copy_data0 0D4A          ?_INTERRUPT_Initialize 0058  
                  ??_ValidTone 0065                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0063                _UART_Initialize 0E24                       __ptext11 0CFA  
                     __ptext12 0B8E                       __ptext13 0D70                     strcpy@dest 0065  
                     isa$xinst 0000                       int$flags 006A                       _mystring 0006  
                   _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0063                  ??_ClearBuffer 0063  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 0066  
      __end_of_UART_Initialize 0E46                     _UART_Write 0D70            __end_of_ClearBuffer 0CFA  
